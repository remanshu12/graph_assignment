class Solution {
    private:
        bool dfs(int row,int col,vector<vector<int>> &grid,vector<vector<int>> &vis){
            vis[row][col]=-1;      
            int n = grid.size();
            int m = grid[0].size();
            int delRow[4]={-1,0,1,0};
            int delCol[4]={0,1,0,-1};
            if(grid[row][col]==2) return true;
            for(int i=0;i<4;i++){
                int nRow = delRow[i]+row;
                int nCol = delCol[i]+col;
                if(nRow<n && nRow>=0 && nCol<m && nCol>=0 && vis[nRow][nCol]!=-1 && grid[nRow][nCol]!=0){
                    if(dfs(nRow,nCol,grid,vis)) return true;
                }
            }
          
            return false;
        }
  public:
    // Function to find whether a path exists from the source to destination.
    bool is_Possible(vector<vector<int>>& grid) {
 
    int n = grid.size();
    int m = grid[0].size();
    vector<vector<int>> vis(n,vector<int>(m,0));
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(grid[i][j]==1){  
                if(dfs(i,j,grid,vis)==true){
                    return true;
                }
            }
        }
    }
        return false;
    }
};